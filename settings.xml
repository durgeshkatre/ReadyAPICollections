<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project xmlns:con="http://eviware.com/soapui/config" id="16b42b0a-7024-420c-9935-5a1604d0330d" created="3.46.1" activeEnvironment="WES-QA-Environment" encryptionMode="Not encrypted" name="WES-Items-Services" projectVersion="" resourceRoot="" updated="3.48.0" compositeProjectFormat="1.3">
  <con:settings>
    <con:setting id="16b42b0a-7024-420c-9935-5a1604d0330dfileName">WES-Items-Services-readyapi-project</con:setting>
  </con:settings>
  <con:requirements/>
  <con:properties>
    <con:property>
      <con:name>itemIdVal</con:name>
    </con:property>
  </con:properties>
  <con:wssContainer/>
  <con:databaseConnectionContainer/>
  <con:jmsConnectionContainer/>
  <con:oAuth2ProfileContainer/>
  <con:oAuth1ProfileContainer/>
  <con:eventHandlers type="RequestFilter.filterRequest" name="RequestFilter.filterRequest">
    <con:script>// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
// This code is often used for adding custom authentication to ReadyAPI functional tests

// If hardcoding the token, uncomment and change line 5
// token = '4567'

// If your token is parameterized in Project level custom property, uncomment line 8
// token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

// To modify all outgoing calls, remove comments from lines 11 to 16
// headers = request.requestHeaders
// if (headers.containsKey('auth_token2') == false) {
//   headers.put('auth_token2', token)
//   request.requestHeaders = headers
// }</con:script>
  </con:eventHandlers>
  <con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep">
    <con:script>// Save all test step results into files
// Change the directory path in line 5 to a location where you want to store details
// then uncomment lines 5 to 10

// filePath = 'C:\\tempOutputDirectory\\'
// fos = new java.io.FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
// pw = new java.io.PrintWriter(fos)
// testStepResult.writeTo(pw)
// pw.close()
// fos.close()</con:script>
  </con:eventHandlers>
  <con:environment id="e2650707-598d-483d-8cfe-a3e04b5a5d8b" name="WES-QA-Environment" index="0">
    <con:service type="REST" name="${#Project#baseUrl}">
      <con:endpoint authProfile="No Authorization" proxyHost="" proxyPort="" proxyUsername="" proxyPassword="" areGlobalProxySettingsIgnored="false">${#Global#wes-qa-baseurl}${#Global#items-services-port}</con:endpoint>
    </con:service>
    <con:property>
      <con:name>itemIdVal</con:name>
      <con:value>12</con:value>
    </con:property>
    <con:databaseConnectionContainer/>
    <con:jmsConnectionContainer/>
  </con:environment>
  <con:environment id="2cdb61a5-9ec3-419e-8126-00a4dce7e52f" name="WES-DEV-Environment" index="1">
    <con:service type="REST" name="${#Project#baseUrl}">
      <con:endpoint authProfile="No Authorization" proxyHost="" proxyPort="" proxyUsername="" proxyPassword="" areGlobalProxySettingsIgnored="false">${#Global#wes-dev-baseurl}${#Global#items-services-port}</con:endpoint>
    </con:service>
    <con:property>
      <con:name>itemIdVal</con:name>
      <con:value/>
    </con:property>
    <con:databaseConnectionContainer/>
    <con:jmsConnectionContainer/>
  </con:environment>
  <con:authRepository/>
  <con:environmentSpec>
    <con:entry environmentId="e2650707-598d-483d-8cfe-a3e04b5a5d8b">
      <con:authProfile>No Authorization</con:authProfile>
    </con:entry>
    <con:entry environmentId="2cdb61a5-9ec3-419e-8126-00a4dce7e52f">
      <con:authProfile>No Authorization</con:authProfile>
    </con:entry>
  </con:environmentSpec>
  <con:tags/>
  <con:zephyrProjectSettings projectName="C00000.00074 OPTO WES" projectId="10322" versionName="Myco v1.0.0 August-2023" versionId="10085" cycleName="Item-Services Test Cycle" cycleId="82a41f3c-f5f5-4d62-8131-f9f8724c3b58"/>
</con:soapui-project>
